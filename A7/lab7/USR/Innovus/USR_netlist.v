/*
###############################################################
#  Generated by:      Cadence Innovus 16.21-s078_1
#  OS:                Linux x86_64(Host ID client04)
#  Generated on:      Mon Nov 11 00:12:05 2019
#  Design:            USR
#  Command:           saveNetlist USR_netlist.v
###############################################################
*/
// Generated by Cadence Genus(TM) Synthesis Solution 16.21-s018_1
// Generated on: Nov 10 2019 23:09:38 IST (Nov 10 2019 17:39:38 UTC)
// Verification Directory fv/USR 
module dff (
	q, 
	d, 
	clk, 
	reset);
   output q;
   input d;
   input clk;
   input reset;

   // Internal wires
   wire UNCONNECTED;
   wire n_1;

   DFFNSRXL q_reg (.CKN(clk),
	.D(n_1),
	.Q(q),
	.QN(UNCONNECTED),
	.RN(1'b1),
	.SN(1'b1));
   NOR2BX1 g6 (.AN(d),
	.B(reset),
	.Y(n_1));
endmodule

module dff_1 (
	q, 
	d, 
	clk, 
	reset);
   output q;
   input d;
   input clk;
   input reset;

   // Internal wires
   wire UNCONNECTED0;
   wire n_1;

   DFFNSRXL q_reg (.CKN(clk),
	.D(n_1),
	.Q(q),
	.QN(UNCONNECTED0),
	.RN(1'b1),
	.SN(1'b1));
   NOR2BX1 g6 (.AN(d),
	.B(reset),
	.Y(n_1));
endmodule

module dff_2 (
	q, 
	d, 
	clk, 
	reset);
   output q;
   input d;
   input clk;
   input reset;

   // Internal wires
   wire UNCONNECTED1;
   wire n_1;

   DFFNSRXL q_reg (.CKN(clk),
	.D(n_1),
	.Q(q),
	.QN(UNCONNECTED1),
	.RN(1'b1),
	.SN(1'b1));
   NOR2BX1 g6 (.AN(d),
	.B(reset),
	.Y(n_1));
endmodule

module dff_3 (
	q, 
	d, 
	clk, 
	reset);
   output q;
   input d;
   input clk;
   input reset;

   // Internal wires
   wire UNCONNECTED2;
   wire n_1;

   DFFNSRXL q_reg (.CKN(clk),
	.D(n_1),
	.Q(q),
	.QN(UNCONNECTED2),
	.RN(1'b1),
	.SN(1'b1));
   NOR2BX1 g6 (.AN(d),
	.B(reset),
	.Y(n_1));
endmodule

module mux (
	y, 
	s1, 
	s0, 
	i3, 
	i2, 
	i1, 
	i0);
   output y;
   input s1;
   input s0;
   input i3;
   input i2;
   input i1;
   input i0;

   MX4XL g143 (.A(i0),
	.B(i1),
	.C(i2),
	.D(i3),
	.S0(s1),
	.S1(s0),
	.Y(y));
endmodule

module mux_1 (
	y, 
	s1, 
	s0, 
	i3, 
	i2, 
	i1, 
	i0);
   output y;
   input s1;
   input s0;
   input i3;
   input i2;
   input i1;
   input i0;

   MX4XL g143 (.A(i0),
	.B(i1),
	.C(i2),
	.D(i3),
	.S0(s1),
	.S1(s0),
	.Y(y));
endmodule

module mux_2 (
	y, 
	s1, 
	s0, 
	i3, 
	i2, 
	i1, 
	i0);
   output y;
   input s1;
   input s0;
   input i3;
   input i2;
   input i1;
   input i0;

   MX4XL g143 (.A(i0),
	.B(i1),
	.C(i2),
	.D(i3),
	.S0(s1),
	.S1(s0),
	.Y(y));
endmodule

module mux_3 (
	y, 
	s1, 
	s0, 
	i3, 
	i2, 
	i1, 
	i0);
   output y;
   input s1;
   input s0;
   input i3;
   input i2;
   input i1;
   input i0;

   MX4XL g143 (.A(i0),
	.B(i1),
	.C(i2),
	.D(i3),
	.S0(s1),
	.S1(s0),
	.Y(y));
endmodule

module USR (
	I, 
	O, 
	clk, 
	reset, 
	s, 
	SINR, 
	SINL);
   input [3:0] I;
   output [3:0] O;
   input clk;
   input reset;
   input [1:0] s;
   input SINR;
   input SINL;

   // Internal wires
   wire [3:0] w;

   dff d1 (.q(O[0]),
	.d(w[0]),
	.clk(clk),
	.reset(reset));
   dff_1 d2 (.q(O[1]),
	.d(w[1]),
	.clk(clk),
	.reset(reset));
   dff_2 d3 (.q(O[2]),
	.d(w[2]),
	.clk(clk),
	.reset(reset));
   dff_3 d4 (.q(O[3]),
	.d(w[3]),
	.clk(clk),
	.reset(reset));
   mux m1 (.y(w[0]),
	.s1(s[1]),
	.s0(s[0]),
	.i3(I[0]),
	.i2(SINL),
	.i1(O[1]),
	.i0(O[0]));
   mux_1 m2 (.y(w[1]),
	.s1(s[1]),
	.s0(s[0]),
	.i3(I[1]),
	.i2(O[0]),
	.i1(O[2]),
	.i0(O[1]));
   mux_2 m3 (.y(w[2]),
	.s1(s[1]),
	.s0(s[0]),
	.i3(I[2]),
	.i2(O[1]),
	.i1(O[3]),
	.i0(O[2]));
   mux_3 m4 (.y(w[3]),
	.s1(s[1]),
	.s0(s[0]),
	.i3(I[3]),
	.i2(O[2]),
	.i1(SINR),
	.i0(O[3]));
endmodule

